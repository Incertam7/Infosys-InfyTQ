023
SELECT prodid, pdesc, category FROM Product WHERE LOWER(category) = 'electronics'



024
SELECT prodid, SUBSTR(pdesc, 1, 5) AS "PDESC_FIVE", category FROM Product



025
SELECT COUNT(saleid) AS "SALE_COUNT" FROM Sale WHERE MONTHS_BETWEEN(SYSDATE, sldate) <= 40

(replace 40 with another number such as 60 as the data in the database is old and the test does not account for the current SYSDATE)



026
SELECT NVL(pdesc, 'No Description') AS PDESC, discount FROM Product



027
SELECT prodid, category, price, discount FROM Product ORDER BY category DESC, price



028
SELECT prodid, category, discount FROM Product WHERE category IN ('Sports', 'Apparel') ORDER BY category, discount


029
SELECT TO_CHAR(sldate, 'Month') AS month, COUNT(*) AS number_sale 
FROM Sale 
GROUP BY TO_CHAR(sldate, 'Month') 
ORDER BY COUNT(*) DESC



030
SELECT prodid, SUM(quantity) AS qty_sold
FROM SaleDetail
WHERE quantity > 1
GROUP BY prodid
HAVING COUNT(*) > 1



031
SELECT prodid, pdesc, price AS "Old_Price", ROUND(price * 0.775, 2) AS "New_Price"
FROM Product
WHERE category IN 'Sports'



032
SELECT saleid, ABS(ROUND(MONTHS_BETWEEN(sldate, SYSDATE), 1)) AS month_aged
FROM Sale

(replace SYSDATE with 04-may-20, because the expected output isn't updated to the current date)



033
SELECT ROUND(AVG(price), 2) AS "Avg", MIN(price) AS "Min", MAX(price) AS "Max", COUNT(*) AS "Total"
FROM Product



034
SELECT CONCAT(sname, CONCAT(' is from ', location)) AS result
FROM SalesMan



035
SELECT TO_CHAR(TO_DATE('Jan/10/2015', 'MON/DD/YYYY'), 'Month') AS month, TO_NUMBER('2,50,000', '9,99,999') AS amount
FROM Dual



036
SELECT prodid, pdesc, price
FROM Product
ORDER BY price DESC, prodid DESC



037
SELECT prodid, pdesc, price
FROM Product
ORDER BY pdesc



038
SELECT location, COUNT(*) AS number_sman
FROM Salesman
GROUP BY location



039
SELECT category
FROM Product
GROUP BY category
HAVING count(*) > 1
